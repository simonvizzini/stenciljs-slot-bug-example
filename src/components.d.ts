/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface MyComponent {
    'useWrapperTwo'?: boolean;
  }
  interface MyWrapperOne {}
  interface MyWrapperTwo {}
}

declare global {


  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLMyWrapperOneElement extends Components.MyWrapperOne, HTMLStencilElement {}
  var HTMLMyWrapperOneElement: {
    prototype: HTMLMyWrapperOneElement;
    new (): HTMLMyWrapperOneElement;
  };

  interface HTMLMyWrapperTwoElement extends Components.MyWrapperTwo, HTMLStencilElement {}
  var HTMLMyWrapperTwoElement: {
    prototype: HTMLMyWrapperTwoElement;
    new (): HTMLMyWrapperTwoElement;
  };
  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement;
    'my-wrapper-one': HTMLMyWrapperOneElement;
    'my-wrapper-two': HTMLMyWrapperTwoElement;
  }
}

declare namespace LocalJSX {
  interface MyComponent {
    'useWrapperTwo'?: boolean;
  }
  interface MyWrapperOne {}
  interface MyWrapperTwo {}

  interface IntrinsicElements {
    'my-component': MyComponent;
    'my-wrapper-one': MyWrapperOne;
    'my-wrapper-two': MyWrapperTwo;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
      'my-wrapper-one': LocalJSX.MyWrapperOne & JSXBase.HTMLAttributes<HTMLMyWrapperOneElement>;
      'my-wrapper-two': LocalJSX.MyWrapperTwo & JSXBase.HTMLAttributes<HTMLMyWrapperTwoElement>;
    }
  }
}


